COMMENT ON TABLE public.road_line IS 'OpenStreetMap roads, full layer.  Generated by osm2pgsql Flex output using pgosm-flex/flex-config/road.lua';
COMMENT ON TABLE public.road_point IS 'OpenStreetMap road points.  Generated by osm2pgsql Flex output using pgosm-flex/flex-config/road.lua';


COMMENT ON COLUMN public.road_line.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';
COMMENT ON COLUMN public.road_point.osm_id IS 'OpenStreetMap ID. Unique along with geometry type.';

COMMENT ON COLUMN public.road_point.osm_type IS 'Value from "highway" key from OpenStreetMap data.  e.g. motorway, residential, service, footway, etc.';
COMMENT ON COLUMN public.road_line.osm_type IS 'Value from "highway" key from OpenStreetMap data.  e.g. motorway, residential, service, footway, etc.';
COMMENT ON COLUMN public.road_polygon.osm_type IS 'Value from "highway" key from OpenStreetMap data.  e.g. motorway, residential, service, footway, etc.';

COMMENT ON COLUMN public.road_point.maxspeed IS 'Maximum posted speed limit in kilometers per hour (km/hr).  Units not enforced by OpenStreetMap.  Please fix values in MPH in OpenStreetMap.org to either the value in km/hr OR with the suffix "mph" so it can be properly converted.  See https://wiki.openstreetmap.org/wiki/Key:maxspeed';
COMMENT ON COLUMN public.road_line.maxspeed IS 'Maximum posted speed limit in kilometers per hour (km/hr).  Units not enforced by OpenStreetMap.  Please fix values in MPH in OpenStreetMap.org to either the value in km/hr OR with the suffix "mph" so it can be properly converted.  See https://wiki.openstreetmap.org/wiki/Key:maxspeed';
COMMENT ON COLUMN public.road_line.major IS 'Indicates feature is a "major" road, classification handled by helpers.major_road().';
COMMENT ON COLUMN public.road_point.layer IS 'Vertical ordering layer (Z) to handle crossing/overlapping features. "All ways without an explicit value are assumed to have layer 0." - per Wiki - https://wiki.openstreetmap.org/wiki/Key:layer';
COMMENT ON COLUMN public.road_line.layer IS 'Vertical ordering layer (Z) to handle crossing/overlapping features. "All ways without an explicit value are assumed to have layer 0." - per Wiki - https://wiki.openstreetmap.org/wiki/Key:layer';
COMMENT ON COLUMN public.road_point.bridge IS 'If empty, assume not a bridge.  If not empty, check value for details.';
COMMENT ON COLUMN public.road_line.bridge IS 'If empty, assume not a bridge.  If not empty, check value for details.';
COMMENT ON COLUMN public.road_point.tunnel IS 'If empty, assume not a tunnel.  If not empty, check value for details.';
COMMENT ON COLUMN public.road_line.tunnel IS 'If empty, assume not a tunnel.  If not empty, check value for details.';
COMMENT ON COLUMN public.road_point.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';
COMMENT ON COLUMN public.road_line.name IS 'Best name option determined by helpers.get_name(). Keys with priority are: name, short_name, alt_name and loc_name.  See pgosm-flex/flex-config/helpers.lua for full logic of selection.';
COMMENT ON COLUMN public.road_point.geom IS 'Geometry loaded by osm2pgsql.';
COMMENT ON COLUMN public.road_line.geom IS 'Geometry loaded by osm2pgsql.';
COMMENT ON COLUMN public.road_point.oneway IS 'Used for calculating costs for routing with one-way controls.  0 indicates 2-way traffic is allowed (or assumed).  1 indicates travel is allowed forward only, -1 indicates travel is allowed reverse only. Values reversible and alternating result in NULL.  See https://wiki.openstreetmap.org/wiki/Key:oneway';
COMMENT ON COLUMN public.road_line.oneway IS 'Used for calculating costs for routing with one-way controls.  0 indicates 2-way traffic is allowed (or assumed).  1 indicates travel is allowed forward only, -1 indicates travel is allowed reverse only. Values reversible and alternating result in NULL.  See https://wiki.openstreetmap.org/wiki/Key:oneway';

COMMENT ON COLUMN public.road_point.ref IS 'Reference number or code. Best ref option determined by helpers.get_ref(). https://wiki.openstreetmap.org/wiki/Key:ref';
COMMENT ON COLUMN public.road_line.ref IS 'Reference number or code. Best ref option determined by helpers.get_ref(). https://wiki.openstreetmap.org/wiki/Key:ref';
COMMENT ON COLUMN public.road_polygon.ref IS 'Reference number or code. Best ref option determined by helpers.get_ref(). https://wiki.openstreetmap.org/wiki/Key:ref';

COMMENT ON COLUMN public.road_line.route_foot IS 'Best guess if the segment is routable for foot traffic. If access is no or private, set to false. WARNING: This does not indicte that this method of travel is safe OR allowed!';
COMMENT ON COLUMN public.road_line.route_cycle IS 'Best guess if the segment is routable for bicycle traffic. If access is no or private, set to false. WARNING: This does not indicte that this method of travel is safe OR allowed!';
COMMENT ON COLUMN public.road_line.route_motor IS 'Best guess if the segment is routable for motorized traffic. If access is no or private, set to false. WARNING: This does not indicte that this method of travel is safe OR allowed!';


ALTER TABLE public.road_point
    ADD CONSTRAINT pk_osm_road_point_osm_id
    PRIMARY KEY (osm_id)
;

ALTER TABLE public.road_line
    ADD CONSTRAINT pk_osm_road_line_osm_id
    PRIMARY KEY (osm_id)
;



------------------------------------------------
CREATE TEMP TABLE road_polygon_in_relations AS
SELECT p_no_rel.osm_id
    FROM public.road_polygon p_no_rel
    WHERE osm_id > 0
        AND EXISTS (SELECT * 
            FROM (SELECT i.osm_id AS relation_id, 
                        jsonb_array_elements_text(i.member_ids)::BIGINT AS member_id
                    FROM public.road_polygon i
                    WHERE i.osm_id < 0
                    ) rel
            WHERE rel.member_id = p_no_rel.osm_id
            ) 
;


DELETE
    FROM public.road_polygon p
    WHERE EXISTS (
        SELECT osm_id
            FROM road_polygon_in_relations pir
            WHERE p.osm_id = pir.osm_id
    )
;



------------------------------------------------
CREATE TEMP TABLE road_line_in_relations AS
SELECT p_no_rel.osm_id
    FROM public.road_line p_no_rel
    WHERE osm_id > 0
        AND EXISTS (SELECT * 
            FROM (SELECT i.osm_id AS relation_id, 
                        jsonb_array_elements_text(i.member_ids)::BIGINT AS member_id
                    FROM public.road_line i
                    WHERE i.osm_id < 0
                    ) rel
            WHERE rel.member_id = p_no_rel.osm_id
            ) 
;

DELETE
    FROM public.road_line p
    WHERE EXISTS (
        SELECT osm_id
            FROM road_line_in_relations pir
            WHERE p.osm_id = pir.osm_id
    )
;

